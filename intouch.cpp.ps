%!PS-Adobe-3.0
%%BoundingBox: 50 50 545 792
%%Title: Enscript Output
%%For: Patrick Muldoon
%%Creator: GNU Enscript 1.6.6
%%CreationDate: Wed Apr 26 20:23:58 2017
%%Orientation: Portrait
%%Pages: (atend)
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 6
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 6
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 10 10 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [595 842] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-simple 1.6 6

/do_header {	% print default simple header
  gsave
    d_header_x d_header_y HFpt_h 3 div add translate

    HF setfont
    user_header_p {
      5 0 moveto user_header_left_str show

      d_header_w user_header_center_str stringwidth pop sub 2 div
      0 moveto user_header_center_str show

      d_header_w user_header_right_str stringwidth pop sub 5 sub
      0 moveto user_header_right_str show
    } {
      5 0 moveto fname show
      45 0 rmoveto fmodstr show
      45 0 rmoveto pagenumstr show
    } ifelse

  grestore
} def
%%EndResource
/d_page_w 495 def
/d_page_h 742 def
/d_header_x 0 def
/d_header_y 727 def
/d_header_w 495 def
/d_header_h 15 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 495 def
/d_footer_h 0 def
/d_output_w 495 def
/d_output_h 727 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
50 50 translate
/pagenum 1 def
/fname (intouch.cpp) def
/fdir (.) def
/ftail (intouch.cpp) def
% User defined strings:
/fmodstr (Wed Apr 26 20:08:32 2017) def
/pagenumstr (1) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
30 714 M (1:) s
48 714 M
(// Copyright 2017 Patrick Muldoon) s
30 703 M (2:) s
48 703 M
(#include "intouch.hpp") s
30 692 M (3:) s
48 692 M
(#include <string>) s
30 681 M (4:) s
48 681 M
(#include <iostream>) s
30 670 M (5:) s
48 670 M
(#include <boost/date_time/posix_time/posix_time.hpp>) s
30 659 M (6:) s
30 648 M (7:) s
48 648 M
(Intouch::Intouch\(std::string start_line, std::string _filename, unsigned ) s
5 637 M
(int line_number\) {) s
30 626 M (8:) s
48 626 M
(        filename= _filename;) s
30 615 M (9:) s
48 615 M
(        success = false;) s
24 604 M (10:) s
48 604 M
(        start_line_number = line_number;) s
24 593 M (11:) s
48 593 M
(        end_line_number = 0;) s
24 582 M (12:) s
48 582 M
(        end_time = "";) s
24 571 M (13:) s
48 571 M
(        boot_time = 0;) s
24 560 M (14:) s
24 549 M (15:) s
24 538 M (16:) s
48 538 M
(        boost::smatch sm;) s
24 527 M (17:) s
48 527 M
(        boost::regex_match\(start_line, sm, StartRegex\);) s
24 516 M (18:) s
48 516 M
(        start_time = sm[1] + "-" + sm[2] + "-" + sm[3] + " " + sm[4]) s
24 505 M (19:) s
48 505 M
(                                                 + ":" + sm[5] + ":" + sm) s
5 494 M
([6]; ) s
24 483 M (20:) s
48 483 M
(}) s
24 472 M (21:) s
24 461 M (22:) s
48 461 M
(void Intouch::BootSuccess\(std::string successful_line, unsigned int line_) s
5 450 M
(number\) {) s
24 439 M (23:) s
48 439 M
(        success = true;) s
24 428 M (24:) s
48 428 M
(        end_line_number = line_number;) s
24 417 M (25:) s
24 406 M (26:) s
48 406 M
(        boost::smatch sm;) s
24 395 M (27:) s
48 395 M
(        boost::regex_match\(successful_line, sm, SucceededRegex\);) s
24 384 M (28:) s
48 384 M
(        end_time = sm[1] + "-" + sm[2] + "-" + sm[3] + " " + sm[4] + ":" ) s
5 373 M
(+ sm[5]) s
24 362 M (29:) s
48 362 M
(                                        + ":" + sm[6];) s
24 351 M (30:) s
24 340 M (31:) s
48 340 M
(        boot_time = Time_Elapsed\(\);) s
24 329 M (32:) s
48 329 M
(}) s
24 318 M (33:) s
24 307 M (34:) s
48 307 M
(std::ostream& operator<< \(std::ostream &out, const Intouch &it\) {) s
24 296 M (35:) s
48 296 M
(        out << "=== Device Boot ===" << std::endl;) s
24 285 M (36:) s
48 285 M
(        out << it.start_line_number << "\(" << it.filename << "\): " ) s
24 274 M (37:) s
48 274 M
(        << it.start_time << " Boot Start" << std::endl;) s
24 263 M (38:) s
24 252 M (39:) s
48 252 M
(        if\(it.success == true\) {) s
24 241 M (40:) s
48 241 M
(                out << it.end_line_number << "\(" << it.filename  << "\): ") s
5 230 M
( << it.end_time ) s
24 219 M (41:) s
48 219 M
(                << " Boot Completed" << std::endl;) s
24 208 M (42:) s
48 208 M
(                out << "\\tBoot Time: " << it.boot_time << "ms" << std::en) s
5 197 M
(dl;) s
24 186 M (43:) s
48 186 M
(        }else {) s
24 175 M (44:) s
48 175 M
(                out << "**** Incomplete Boot ****" << std::endl;) s
24 164 M (45:) s
48 164 M
(        }) s
24 153 M (46:) s
24 142 M (47:) s
48 142 M
(        return out;) s
24 131 M (48:) s
48 131 M
(}) s
24 120 M (49:) s
24 109 M (50:) s
48 109 M
(std::ostream& operator<< \(std::ostream &out, const Services &service\)) s
24 98 M (51:) s
48 98 M
({) s
24 87 M (52:) s
48 87 M
(        out << "\\t" << service.service_name << std::endl;) s
24 76 M (53:) s
48 76 M
(        out << "\\t\\tStart: " << service.start_line_number << "\(" << servi) s
5 65 M
(ce.filename ) s
24 54 M (54:) s
48 54 M
(        << "\)" << std::endl;) s
24 43 M (55:) s
48 43 M
(        if\(service.success == true\) {) s
24 32 M (56:) s
48 32 M
(                out << "\\t\\tCompleted: "  << service.end_line_number << ") s
5 21 M
(\(" << service.filename ) s
24 10 M (57:) s
48 10 M
(                << "\)" << std::endl;) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
50 50 translate
/pagenum 2 def
/fname (intouch.cpp) def
/fdir (.) def
/ftail (intouch.cpp) def
% User defined strings:
/fmodstr (Wed Apr 26 20:08:32 2017) def
/pagenumstr (2) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
24 714 M (58:) s
48 714 M
(                out << "\\t\\tElapsed Time: " << service.boot_time << " ms") s
5 703 M
( << std::endl;) s
24 692 M (59:) s
48 692 M
(        } else {) s
24 681 M (60:) s
48 681 M
(                out << "\\t\\tCompleted: Not completed" << "\(" << service.f) s
5 670 M
(ilename << "\)" << std::endl;) s
24 659 M (61:) s
48 659 M
(                out << "\\t\\tElapsed Time: " << std::endl;) s
24 648 M (62:) s
48 648 M
(        }) s
24 637 M (63:) s
48 637 M
(        return out;) s
24 626 M (64:) s
48 626 M
(}) s
24 615 M (65:) s
24 604 M (66:) s
48 604 M
(unsigned int Intouch::Time_Elapsed\(\) {) s
24 593 M (67:) s
48 593 M
(        boost::posix_time::ptime start;) s
24 582 M (68:) s
48 582 M
(        start = \(boost::posix_time::time_from_string\(start_time\)\);) s
24 571 M (69:) s
48 571 M
(        boost::posix_time::ptime end;) s
24 560 M (70:) s
48 560 M
(        end = \(boost::posix_time::time_from_string\(end_time\)\);) s
24 549 M (71:) s
48 549 M
(        boost::posix_time::time_duration total; ) s
24 538 M (72:) s
48 538 M
(        total = end - start;) s
24 527 M (73:) s
48 527 M
(        return total.total_milliseconds\(\);) s
24 516 M (74:) s
48 516 M
(}) s
24 505 M (75:) s
24 494 M (76:) s
48 494 M
(Services::Services\(std::string start_line, std::string _filename, unsigne) s
5 483 M
(d int line_number\)) s
24 472 M (77:) s
48 472 M
({) s
24 461 M (78:) s
48 461 M
(        filename = _filename;) s
24 450 M (79:) s
48 450 M
(        success = false;) s
24 439 M (80:) s
48 439 M
(        start_line_number = line_number;) s
24 428 M (81:) s
48 428 M
(        end_line_number = 0;) s
24 417 M (82:) s
48 417 M
(        boot_time = "";) s
24 406 M (83:) s
48 406 M
(        ) s
24 395 M (84:) s
48 395 M
(        boost::smatch sm;) s
24 384 M (85:) s
48 384 M
(        boost::regex_match\(start_line, sm, ServiceStart\);) s
24 373 M (86:) s
48 373 M
(        service_name = sm[1];) s
24 362 M (87:) s
24 351 M (88:) s
48 351 M
(        ) s
24 340 M (89:) s
48 340 M
(}) s
24 329 M (90:) s
24 318 M (91:) s
48 318 M
(void Services::ServiceBoot\(std::string successful_line, unsigned int line) s
5 307 M
(_number\)) s
24 296 M (92:) s
48 296 M
({) s
24 285 M (93:) s
48 285 M
(        success = true;) s
24 274 M (94:) s
48 274 M
(        end_line_number = line_number;) s
24 263 M (95:) s
48 263 M
(        boost::smatch sm;) s
24 252 M (96:) s
48 252 M
(        boost::regex_match\(successful_line, sm, ServiceSuccess\);) s
24 241 M (97:) s
48 241 M
(        boot_time = sm[3];) s
24 230 M (98:) s
48 230 M
(}) s
24 219 M (99:) s
18 208 M (100:) s
48 208 M
(Softload::Softload\(std::string start_line, std::string _filename, unsigne) s
5 197 M
(d int line_number\)) s
18 186 M (101:) s
48 186 M
({) s
18 175 M (102:) s
48 175 M
(        filename= _filename;) s
18 164 M (103:) s
48 164 M
(        success = false;) s
18 153 M (104:) s
48 153 M
(        start_line_number = line_number;) s
18 142 M (105:) s
48 142 M
(        end_line_number = 0;) s
18 131 M (106:) s
48 131 M
(        end_time_soft = "";) s
18 120 M (107:) s
48 120 M
(        boot_time = 0;) s
18 109 M (108:) s
18 98 M (109:) s
18 87 M (110:) s
48 87 M
(        boost::smatch sm;) s
18 76 M (111:) s
48 76 M
(        boost::regex_match\(start_line, sm, SoftLoadBegin\);) s
18 65 M (112:) s
48 65 M
(        start_time_soft = sm[1] + " " + sm[2] + " " + sm[3] + ":" + sm[4]) s
5 54 M
( + ":" + sm[5];) s
18 43 M (113:) s
48 43 M
(        boost::smatch z;) s
18 32 M (114:) s
48 32 M
(        boost::regex_match\(start_line, z, SoftLoadBegin\);) s
18 21 M (115:) s
48 21 M
(        begin = z[3] + ":" + z[4] + ":" + z[5];) s
18 10 M (116:) s
48 10 M
(}) s
_R
S
%%Page: (3) 3
%%BeginPageSetup
_S
50 50 translate
/pagenum 3 def
/fname (intouch.cpp) def
/fdir (.) def
/ftail (intouch.cpp) def
% User defined strings:
/fmodstr (Wed Apr 26 20:08:32 2017) def
/pagenumstr (3) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
18 714 M (117:) s
18 703 M (118:) s
48 703 M
(void Softload::Originalver\(std::string successful_line\)) s
18 692 M (119:) s
48 692 M
({) s
18 681 M (120:) s
48 681 M
(        boost::smatch sm;) s
18 670 M (121:) s
48 670 M
(        boost::regex_match\(successful_line, sm, Original\);) s
18 659 M (122:) s
48 659 M
(        oldSoftLoad = sm[6] + "." + sm[7] + "." + sm[8] + "-" + sm[9];) s
18 648 M (123:) s
48 648 M
(}) s
18 637 M (124:) s
18 626 M (125:) s
48 626 M
(void Softload::Newver\(std::string successful_line\)) s
18 615 M (126:) s
48 615 M
({) s
18 604 M (127:) s
48 604 M
(        boost::smatch sm;) s
18 593 M (128:) s
48 593 M
(        boost::regex_match\(successful_line, sm, New\);) s
18 582 M (129:) s
48 582 M
(        newSoftLoad = sm[6] + "." + sm[7] + "." + sm[8] + "-" + sm[9];) s
18 571 M (130:) s
48 571 M
(}) s
18 560 M (131:) s
18 549 M (132:) s
48 549 M
(void Softload::SoftloadSuccess\(std::string successful_line, unsigned int ) s
5 538 M
(line_number\)) s
18 527 M (133:) s
48 527 M
({) s
18 516 M (134:) s
48 516 M
(        success = true;) s
18 505 M (135:) s
48 505 M
(        end_line_number = line_number;) s
18 494 M (136:) s
18 483 M (137:) s
48 483 M
(        boost::smatch sm;) s
18 472 M (138:) s
48 472 M
(        boost::regex_match\(successful_line, sm, SoftLoadEnd\);) s
18 461 M (139:) s
48 461 M
(        end_time_soft = sm[1] + " " + sm[2] + " " + sm[3] + ":" + sm[4] +) s
5 450 M
( ":" + sm[5];) s
18 439 M (140:) s
48 439 M
(        boost::smatch z;) s
18 428 M (141:) s
48 428 M
(        boost::regex_match\(successful_line, z, SoftLoadEnd\);) s
18 417 M (142:) s
48 417 M
(        stop = z[3] + ":" + z[4] + ":" + z[5];) s
18 406 M (143:) s
48 406 M
(        //boot_time = Time\(\);) s
18 395 M (144:) s
48 395 M
(        ) s
18 384 M (145:) s
48 384 M
(}) s
18 373 M (146:) s
18 362 M (147:) s
48 362 M
(unsigned int Softload::Time\(\)) s
18 351 M (148:) s
48 351 M
({) s
18 340 M (149:) s
48 340 M
(        std::cout << "breaking here\\n";) s
18 329 M (150:) s
48 329 M
(        std::cout << getStartTime\(\) << " " << getEndTime\(\) << std::endl;) s
18 318 M (151:) s
48 318 M
(        std::cout << getBegin\(\) << " " << getStop\(\) << std::endl;) s
18 307 M (152:) s
48 307 M
(        boost::posix_time::ptime x\(boost::posix_time::time_from_string\(be) s
5 296 M
(gin\)\);) s
18 285 M (153:) s
48 285 M
(        std::cout << "broke\\n";) s
18 274 M (154:) s
48 274 M
(        boost::posix_time::ptime z\(boost::posix_time::time_from_string\(en) s
5 263 M
(d_time_soft\)\);) s
18 252 M (155:) s
48 252 M
(        boost::posix_time::time_duration total; ) s
18 241 M (156:) s
48 241 M
(        total = z - x;) s
18 230 M (157:) s
48 230 M
(        return total.total_milliseconds\(\);) s
18 219 M (158:) s
48 219 M
(}) s
_R
S
%%Trailer
%%Pages: 3
%%DocumentNeededResources: font Courier-Bold Courier 
%%EOF
